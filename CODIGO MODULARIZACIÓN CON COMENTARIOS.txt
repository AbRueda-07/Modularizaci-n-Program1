using System; // Importa el espacio de nombres System para usar las clases y métodos básicos de C#

namespace Modularización // Define un nuevo espacio de nombres llamado Modularización
{
    class Program // Define una clase llamada Program
    {
        static void Main() // Método principal que ejecuta el programa
        {
            string opcion; // Variable para almacenar la opción seleccionada por el usuario
            do // Bucle do-while para mostrar el menú y procesar la opción seleccionada
            {
                // Mostrar opciones del menú
                Console.WriteLine(" \n -MENÚ DE OPCIÓNES- \n");
                Console.WriteLine("1. Calculadora básica.");
                Console.WriteLine("2. Validación de contraseña.");
                Console.WriteLine("3. Números primos.");
                Console.WriteLine("4. Suma de números pares.");
                Console.WriteLine("5. Conversión de temperaturas.");
                Console.WriteLine("6. Contador de vocales.");
                Console.WriteLine("7. Cálculo de factorial.");
                Console.WriteLine("8. Juego de adivinanza.");
                Console.WriteLine("9. Paso por referencia.");
                Console.WriteLine("10. Tabla de multiplicar.");
                Console.WriteLine("0. Salir");
                Console.WriteLine("\nSeleccione una opción: ");

                opcion = Console.ReadLine(); // Leer la opción seleccionada por el usuario

                // Procesar la opción seleccionada
                switch (opcion)
                {
                    case "1":
                        Calcbasic(); // Llamar al método de calculadora básica
                        break;
                    case "2":
                        ValidarContrasenia(); // Llamar al método de validación de contraseña
                        break;
                    case "3":
                        NumerosPrimos(); // Llamar al método de verificación de números primos
                        break;
                    case "4":
                        SumaPares(); // Llamar al método de suma de números pares
                        break;
                    case "5":
                        ConversionTemperaturas(); // Llamar al método de conversión de temperaturas
                        break;
                    case "6":
                        ContadorVocales(); // Llamar al método de contador de vocales
                        break;
                    case "7":
                        Factorial(); // Llamar al método de cálculo de factorial
                        break;
                    case "8":
                        JuegoAdivinanza(); // Llamar al método de juego de adivinanza
                        break;
                    case "9":
                        PasoPorReferencia(); // Llamar al método de paso por referencia
                        break;
                    case "10":
                        TablaMultiplicar(); // Llamar al método de tabla de multiplicar
                        break;
                    case "0":
                        Console.WriteLine("\nGracias por usar el programa, Adiós."); // Mensaje de despedida
                        break;
                    default:
                        Console.WriteLine("Opción no válida."); // Mensaje de error para opción no válida
                        break;
                }
            } while (opcion != "0"); // Continuar el bucle hasta que el usuario elija salir
        }

        static void Calcbasic() // Método de calculadora básica
        {
            Console.Write("\nIngrese el primer número:\n ");
            if (!double.TryParse(Console.ReadLine(), out double n1)) // Leer y validar el primer número
            {
                Console.WriteLine("Número inválido. Intente nuevamente."); // Mensaje de error para número inválido
                return; // Salir del método si el número es inválido
            }

            Console.Write("\nIngrese el segundo número:\n");
            if (!double.TryParse(Console.ReadLine(), out double n2)) // Leer y validar el segundo número
            {
                Console.WriteLine("Número inválido. Intente nuevamente."); // Mensaje de error para número inválido
                return; // Salir del método si el número es inválido
            }

            // Mostrar opciones de operaciones
            Console.WriteLine("\nSeleccione una operación:");
            Console.WriteLine("1. Suma");
            Console.WriteLine("2. Resta");
            Console.WriteLine("3. Multiplicación");
            Console.WriteLine("4. División");
            Console.WriteLine(" \nIngresa la opción seleccionada");
            double operacion = double.Parse(Console.ReadLine()); // Leer la operación seleccionada por el usuario
            Console.WriteLine();

            // Procesar la operación seleccionada
            switch (operacion)
            {
                case 1:
                    Console.WriteLine($"\nEl resultado de la suma es: {n1 + n2}"); // Mostrar resultado de la suma
                    break;
                case 2:
                    Console.WriteLine($"\nEl resultado de la resta es: {n1 - n2}"); // Mostrar resultado de la resta
                    break;
                case 3:
                    Console.WriteLine($"\nEl resultado de la multiplicación es: {n1 * n2}"); // Mostrar resultado de la multiplicación
                    break;
                case 4:
                    if (n2 != 0)
                        Console.WriteLine($"\nEl resultado de la división es: {n1 / n2}"); // Mostrar resultado de la división
                    else
                        Console.WriteLine("\nNo se puede dividir entre 0."); // Mensaje de error para división por cero
                    break;
                default:
                    Console.WriteLine("Operación no válida."); // Mensaje de error para operación no válida
                    break;
            }
        }

        static void ValidarContrasenia() // Método de validación de contraseña
        {
            string contrasenia; // Variable para almacenar la contraseña ingresada por el usuario
            do
            {
                Console.Write("\nIngrese la contraseña: ");
                contrasenia = Console.ReadLine(); // Leer la contraseña ingresada por el usuario
                if (contrasenia != "0011")
                {
                    Console.WriteLine("Acceso denegado. Vuelva a intentarlo."); // Mensaje de acceso denegado
                }
            } while (contrasenia != "0011"); // Continuar el bucle hasta que se ingrese la contraseña correcta
            Console.WriteLine("Acceso concedido."); // Mensaje de acceso concedido
        }

        static void NumerosPrimos() // Método de verificación de números primos
        {
            Console.Write("Ingrese un número: ");
            if (int.TryParse(Console.ReadLine(), out int num)) // Leer y validar el número ingresado
            {
                bool esPrimo = num > 1; // Asumir que el número es primo inicialmente
                for (int i = 2; i <= Math.Sqrt(num) && esPrimo; i++) // Verificar si el número es primo
                    if (num % i == 0)
                        esPrimo = false; // Si el número es divisible por i, no es primo
                Console.WriteLine(esPrimo ? "El número es primo." : "El número no es primo."); // Mostrar resultado
            }
            else
            {
                Console.WriteLine("Número no válido."); // Mensaje de error para número inválido
            }
        }

        static void SumaPares() // Método de suma de números pares
        {
            int suma = 0; // Variable para almacenar la suma de números pares
            int num; // Variable para almacenar el número ingresado
            do
            {
                Console.Write("Ingrese un número (0 para terminar): ");
                if (int.TryParse(Console.ReadLine(), out num) && num % 2 == 0) // Leer y validar el número ingresado
                    suma += num; // Sumar el número si es par
            } while (num != 0); // Continuar el bucle hasta que se ingrese 0
            Console.WriteLine($"Suma de números pares: {suma}"); // Mostrar la suma de números pares
        }

        static void ConversionTemperaturas() // Método de conversión de temperaturas
        {
            // Mostrar opciones de conversión
            Console.WriteLine("1. Celsius a Fahrenheit (C° A F°).");
            Console.WriteLine("2. Fahrenheit a Celsius (F° a C°).");
            Console.WriteLine("Seleccione una opción: ");
            string opcion = Console.ReadLine(); // Leer la opción seleccionada por el usuario
            Console.Write("Ingrese la temperatura: ");

            if (double.TryParse(Console.ReadLine(), out double temp)) // Leer y validar la temperatura ingresada
            {
                if (opcion == "1")
                    Console.WriteLine($"Temperatura en Fahrenheit: {(temp * 9 / 5) + 32}"); // Convertir de Celsius a Fahrenheit
                else if (opcion == "2")
                    Console.WriteLine($"Temperatura en Celsius: {(temp - 32) * 5 / 9}"); // Convertir de Fahrenheit a Celsius
                else
                    Console.WriteLine("Opción no válida."); // Mensaje de error para opción no válida
            }
            else
            {
                Console.WriteLine("Dato no válido."); // Mensaje de error para dato inválido
            }
        }

        static void ContadorVocales() // Método de contador de vocales
        {
            Console.Write("Ingrese una palabra: ");
            string palabra = Console.ReadLine().ToLower(); // Leer la palabra ingresada y convertir a minúsculas
            int contador = 0; // Variable para almacenar el número de vocales
            foreach (char letra in palabra) // Recorrer cada letra de la palabra
            {
                if ("aeiou".Contains(letra)) // Verificar si la letra es una vocal
                    contador++; // Incrementar el contador de vocales
            }
            Console.WriteLine($"Número de vocales: {contador}"); // Mostrar el número de vocales
        }

        static void Factorial() // Método de cálculo de factorial
        {
            Console.Write("Ingrese un número: ");
            if (int.TryParse(Console.ReadLine(), out int num)) // Leer y validar el número ingresado
            {
                int factorial = 1; // Variable para almacenar el factorial
                for (int i = 1; i <= num; i++) // Calcular el factorial
                    factorial *= i;
                Console.WriteLine($"El factorial de {num} es: {factorial}"); // Mostrar el factorial
            }
            else
            {
                Console.WriteLine("Número no válido."); // Mensaje de error para número inválido
            }
        }

        static void JuegoAdivinanza() // Método de juego de adivinanza
        {
            Random aleatorio = new Random(); // Crear un objeto Random para generar un número aleatorio
            int numSecreto = aleatorio.Next(1, 11); // Generar un número aleatorio entre 1 y 10
            int intento = 0; // Variable para almacenar el intento del usuario
            int num; // Variable para almacenar el número ingresado
            do
            {
                Console.Write("Adivina el número entre 1 y 10: ");
                if (int.TryParse(Console.ReadLine(), out intento)) // Leer y validar el intento del usuario
                {
                    if (intento > numSecreto)
                        Console.WriteLine("Demasiado alto."); // Mensaje para intento demasiado alto
                    else if (intento < numSecreto)
                        Console.WriteLine("Demasiado bajo."); // Mensaje para intento demasiado bajo
                }
                else
                {
                    Console.WriteLine("Número no válido."); // Mensaje de error para número inválido
                }
            } while (intento != numSecreto); // Continuar el bucle hasta que el intento sea correcto
            Console.WriteLine("¡Correcto! Has adivinado el número."); // Mensaje de éxito
        }

        static void PasoPorReferencia() // Método de paso por referencia
        {
            Console.Write("Ingrese el primer número: ");
            if (int.TryParse(Console.ReadLine(), out int numero1)) // Leer y validar el primer número
            {
                Console.Write("Ingrese el segundo número: ");
                if (int.TryParse(Console.ReadLine(), out int numero2)) // Leer y validar el segundo número
                {
                    Console.WriteLine($"Antes del intercambio: numero1 = {numero1}, numero2 = {numero2}"); // Mostrar números antes del intercambio
                    Intercambiar(ref numero1, ref numero2); // Llamar al método para intercambiar los números
                    Console.WriteLine($"Después del intercambio: numero1 = {numero1}, numero2 = {numero2}"); // Mostrar números después del intercambio
                }
                else
                {
                    Console.WriteLine("Número no válido"); // Mensaje de error para número inválido
                }
            }
            else
            {
                Console.WriteLine("Número no válido"); // Mensaje de error para número inválido
            }
        }

        static void Intercambiar(ref int a, ref int b) // Método para intercambiar dos números por referencia
        {
            int temp = a; // Almacenar el valor de a en una variable temporal
            a = b; // Asignar el valor de b a a
            b = temp; // Asignar el valor de la variable temporal a b
        }

        static void TablaMultiplicar() // Método de tabla de multiplicar
        {
            Console.Write("Ingrese un número: ");
            if (int.TryParse(Console.ReadLine(), out int num)) // Leer y validar el número ingresado
            {
                for (int i = 1; i <= 10; i++) // Generar la tabla de multiplicar
                    Console.WriteLine($"{num} x {i} = {num * i}");
            }
            else
            {
                Console.WriteLine("Número no válido."); // Mensaje de error para número inválido
            }
        }
    }
}
``` ▋